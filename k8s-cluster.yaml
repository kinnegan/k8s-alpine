---
- hosts: all
  become: true
  tasks:

    - name: Installing Python
      raw: apk add python3

    - name: Checking python package version
      ansible.builtin.command: python3 --version
      register: python_version
    - debug:
        var: python_version.stdout

    - name: Add repo http://dl-cdn.alpinelinux.org/alpine/v3.20/main
      ansible.builtin.lineinfile:
        path: /etc/apk/repositories
        line: http://dl-cdn.alpinelinux.org/alpine/v3.20/main
        create: yes
        state: present
      when: ansible_distribution == "Alpine"

    - name: Add repo http://dl-cdn.alpinelinux.org/alpine/v3.20/community
      ansible.builtin.lineinfile:
        path: /etc/apk/repositories
        line: http://dl-cdn.alpinelinux.org/alpine/v3.20/community
        create: yes
        state: present
      when: ansible_distribution == "Alpine"

    - name: Add repo http://dl-cdn.alpinelinux.org/alpine/edge/community
      ansible.builtin.lineinfile:
        path: /etc/apk/repositories
        line: http://dl-cdn.alpinelinux.org/alpine/edge/community
        create: yes
        state: present
      when: ansible_distribution == "Alpine"

    - name: Add repo http://dl-cdn.alpinelinux.org/alpine/edge/community
      ansible.builtin.lineinfile:
        path: /etc/apk/repositories
        line: http://dl-cdn.alpinelinux.org/alpine/edge/testing
        create: yes
        state: present
      when: ansible_distribution == "Alpine"

    - name: Updating and installing packages
      apk:
        name:
          - bash
          - curl
          - ebtables
          - iptables
          - ethtool
          - socat
          - conntrack-tools
          - openrc
          - cni-plugin-flannel
          - cni-plugins
          - flannel
          - flannel-contrib-cni
          - kubelet
          - kubeadm
          - kubectl
          - containerd
          - uuidgen
          - nfs-utils
        update_cache: yes
        state: latest

    - name: Обновление системы
      apk:
        upgrade: yes
    
    - name: add kernel module for networking stuff
      ansible.builtin.lineinfile:
         path: /etc/modules-load.d/k8s.conf
         line: br_netfilter
         create: yes

    - name: Add the br_netfilter module
      community.general.modprobe:
         name: 8021q
         state: present

    - name: Enable IPv4 traffic forwarding
      ansible.builtin.copy:
         content=1
         dest="/proc/sys/net/ipv4/ip_forward"
         unsafe_writes=true

    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled
      ansible.builtin.lineinfile:
         path: /etc/fstab
         state: absent
         regexp: 'swap'

    - name: Disable SWAP
      shell: swapoff -a

    - name: rshared
      shell: mount --make-rshared /

    - name: Fix prometheus errors
      ansible.builtin.lineinfile:
         path: /etc/local.d/sharemetrics.start
         line: '{{ item }}'
         create: yes
      with_items:
         - '#!/bin/sh'
         - 'mount --make-rshared /'

    - name: Changing perm of "/etc/local.d/sharemetrics.start", adding "+x"
      file:
         dest: /etc/local.d/sharemetrics.start
         mode: a+x

    - name: Changing version "pause" in config.toml
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: 'pause:3\.8'
        replace: 'pause:3.9'
      notify:
        - Restart containerd

    - name: Start service local, if not started
      ansible.builtin.service:
         name: local
         enabled: yes
         state: started

    - name: add machine_id
      ansible.builtin.copy:
         dest: /etc/machine-id
         content: |
           {{ 99999 | random | to_uuid }}
         force: false

    - name: kernell
      ansible.builtin.lineinfile:
         path: /etc/sysctl.conf
         line: net.bridge.bridge-nf-call-iptables=1
         create: yes

    - name: sysctl
      ansible.posix.sysctl:
         name: net.bridge.bridge-nf-call-iptables
         value: '1'
         sysctl_set: true

    - name: Starting and enabling kubelet
      service:
        name: kubelet
        enabled: yes
        state: started

- hosts: master
  become: true
  tasks:

    - name: Init Kubernetes
      command: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=all

    - name: Crating kubectl configuration
      shell: |
        mkdir -p $HOME/.kube
        cp /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
      args:
        executable: /bin/bash

    - name: Get kubeadm join command
      shell: kubeadm token create --print-join-command
      register: kubeadm_join_command_result

    - name: Set kubeadm join command for workers
      set_fact:
        kubeadm_join_command: "{{ kubeadm_join_command_result.stdout }}"
      run_once: true

    - name: Installing CNI plugin (Flannel)
      command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

- hosts: worker
  become: true
  tasks:

    - name: Присоединение worker-нод к кластеру
      command: "{{ hostvars['master']['kubeadm_join_command'] }}"

  handlers:
    - name: Restart containerd
      ansible.builtin.service:
        name: containerd
        state: restarted
